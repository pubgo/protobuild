// Code generated by protoc-gen-gorm. DO NOT EDIT.
// versions:
// - protoc-gen-lava v0.1.0
// - protoc          v3.19.4
// source: protoc-gen-retag/example/example.proto

package example

import grpc "google.golang.org/grpc"

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ExampleModel gen from github.com/pubgo/protobuild/pkg/protoc-gen-retag/example.Example
type ExampleModel struct {
	WithNewTags     string              `graphql:"withNewTags,optional" json:"with_new_tags"`
	WithNewMultiple string              `graphql:"withNewTags,optional" json:"with_new_multiple" xml:"multi,omitempty"`
	ReplaceDefault  string              `json:"replacePrevious"`
	A               string              `json:"A"`
	BJk             int32               `json:"b_Jk"`
	ID              *string             `json:"id"`
	Mm              *SecondMessageModel `json:"mm"`
	Mm2             *SecondMessageModel `json:"mm_2"`
}

func (m *ExampleModel) ToProto() *Example {
	if m == nil {
		return nil
	}

	var x = new(Example)
	x.WithNewTags = m.WithNewTags

	x.WithNewMultiple = m.WithNewMultiple

	x.ReplaceDefault = m.ReplaceDefault

	x.A = m.A

	x.BJk = m.BJk

	x.ID = m.ID

	if m.Mm != nil {
		x.Mm = m.Mm.ToProto()
	}

	if m.Mm2 != nil {
		x.Mm2 = m.Mm2.ToProto()
	}

	return x
}
func (x *Example) ToModel() *ExampleModel {
	if x == nil {
		return nil
	}

	var m = new(ExampleModel)
	m.WithNewTags = x.WithNewTags

	m.WithNewMultiple = x.WithNewMultiple

	m.ReplaceDefault = x.ReplaceDefault

	m.A = x.A

	m.BJk = x.BJk

	m.ID = x.ID

	if x.Mm != nil {
		m.Mm = x.Mm.ToModel()
	}

	if x.Mm2 != nil {
		m.Mm2 = x.Mm2.ToModel()
	}

	return m
}

// SecondMessageModel gen from github.com/pubgo/protobuild/pkg/protoc-gen-retag/example.SecondMessage
type SecondMessageModel struct {
	WithNewTags     string `graphql:"withNewTags,optional" json:"with_new_tags"`
	WithNewMultiple string `graphql:"withNewTags,optional" json:"with_new_multiple" xml:"multi,omitempty"`
	ReplaceDefault  string `json:"replacePrevious"`
}

func (m *SecondMessageModel) ToProto() *SecondMessage {
	if m == nil {
		return nil
	}

	var x = new(SecondMessage)
	x.WithNewTags = m.WithNewTags

	x.WithNewMultiple = m.WithNewMultiple

	x.ReplaceDefault = m.ReplaceDefault

	return x
}
func (x *SecondMessage) ToModel() *SecondMessageModel {
	if x == nil {
		return nil
	}

	var m = new(SecondMessageModel)
	m.WithNewTags = x.WithNewTags

	m.WithNewMultiple = x.WithNewMultiple

	m.ReplaceDefault = x.ReplaceDefault

	return m
}

// ThirdExampleModel gen from github.com/pubgo/protobuild/pkg/protoc-gen-retag/example.ThirdExample
type ThirdExampleModel struct {
	InnerExample *ThirdExample_InnerExampleModel `json:"inner"`
}

func (m *ThirdExampleModel) ToProto() *ThirdExample {
	if m == nil {
		return nil
	}

	var x = new(ThirdExample)
	if m.InnerExample != nil {
		x.InnerExample = m.InnerExample.ToProto()
	}

	return x
}
func (x *ThirdExample) ToModel() *ThirdExampleModel {
	if x == nil {
		return nil
	}

	var m = new(ThirdExampleModel)
	if x.InnerExample != nil {
		m.InnerExample = x.InnerExample.ToModel()
	}

	return m
}
