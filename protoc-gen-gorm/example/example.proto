syntax = "proto3";

package example;

import "retag/retag.proto";
import "orm/gorm.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/any.proto";

option go_package = "github.com/pubgo/protobuild/pkg/protoc-gen-gorm/example;example";

message User {
  option (gorm.opts) = {
    enabled: true,
  };

  uint64 id = 1 [
    (gorm.field) = {
      pk: true,
      allow_detail: true,
      allow_list: true,
      allow_update: true,
    }
  ];

  google.protobuf.Timestamp created_at = 2 [
    (gorm.field) = {
      allow_list: true,
      allow_detail: true,
    }
  ];

  google.protobuf.Timestamp updated_at = 3[
    (gorm.field) = {
      allow_list: true,
      allow_detail: true,
    }
  ];

  google.protobuf.Timestamp birthday = 4[
    (gorm.field) = {
      allow_all: true,
    }
  ];

  uint32 num = 6 [
    (gorm.field) = {
      allow_all: true,
    }
  ];
}

message Example {
  option (gorm.opts) = {
    enabled : true;
  };

  string with_new_tags = 1 [
    (retag.tags) = {name:"graphql",value:"withNewTags,optional"}
  ];

  string with_new_multiple = 2 [
    (retag.tags) = {name:"graphql",value:"withNewTags,optional"},
    (retag.tags) = {name:"xml",value:"multi,omitempty"}
  ];

  string replace_default = 3 [
    (retag.tags) = {name:"json",value:"replacePrevious"}
  ] ;

  string a = 5 [(retag.tags) = {name:"json",value:"A"}];
  int32 b_jk = 6 [(retag.tags) = {name:"json",value:"b_Jk"}];

  repeated SecondMessage test_1 = 10;
  optional SecondMessage test_2 = 11;
  SecondMessage test_61 = 19;
  map<string, SecondMessage> test_31 = 13;

  google.protobuf.Timestamp test_5 = 15;
  repeated google.protobuf.Timestamp test_51 = 18;
  optional google.protobuf.Timestamp test_17 = 17;
  map<string, google.protobuf.Timestamp> test_3 = 12;

  repeated string list_test20 = 20;
  map<string, string> list_test21 = 21;
}

message SecondMessage {
  option (gorm.opts) = {
    enabled : true;
  };

  string with_new_tags = 1 [(retag.tags) = {name:"graphql",value:"withNewTags,optional"}];
  string with_new_multiple = 2 [
    (retag.tags) = {name:"graphql",value:"withNewTags,optional"},
    (retag.tags) = {name:"xml",value:"multi,omitempty"}
  ];

  string replace_default = 3 [(retag.tags) = {name:"json",value:"replacePrevious"}] ;
}

message ThirdExample {
  option (gorm.opts) = {
    enabled : true;
    table : "sys_third_example"
  };

  //  message InnerExample {
  //    string id = 1 [(retag.tags) = {name:"json",value:"yes"}];
  //    int32 yes = 2 [(retag.tags) = {name:"json",value:"id"}];
  //  }

  //  InnerExample inner_example = 1 [
  //    (retag.tags) = {name:"json",value:"inner"}
  //  ];

  optional string  test = 2;
}


service ExampleService {
  option (gorm.server) = {
    service : true,
    table : "example"
  };

  rpc Create(CreateExampleRequest) returns (CreateExampleResponse){}
  rpc Delete(CreateExampleRequest) returns (CreateExampleResponse){}
  rpc Update(CreateExampleRequest) returns (CreateExampleResponse){}
  rpc Detail(CreateExampleRequest) returns (CreateExampleResponse){}
  rpc List(ListExampleRequest) returns (ListExampleResponse){}
  rpc All(AllSrvReq) returns (AllSrvRsp) {}
}

message Req {
  oneof req {
    CreateExampleRequest req1 = 1;
    ListExampleRequest req2 = 2;
  }
}

message AllSrvReq {
  repeated Req req = 1;
}

message Rsp {
  oneof rsp {
    CreateExampleResponse rsq1 = 1;
    ListExampleResponse rsq2 = 2;
  }
}

message AllSrvRsp {
  repeated Rsp rsp = 1;
}

message CreateExampleRequest {
  optional string name = 1 [
    json_name = "name"
  ];
}

message CreateExampleResponse {
  optional string name = 1;
}

message ListExampleRequest {
  google.protobuf.Any any = 1;
}

message ListExampleResponse {
  repeated Example data = 1;
}